params {
    genome_base = params.genome == "GRCh37" ? "/data/bioinformatics/bcbio_genomes/Hsapiens/GRCh37" : params.genome == "hg38" ? "/data/bioinformatics/bcbio_genomes/Hsapiens/hg38" : "/data/bioinformatics/bcbio_genomes/HsapiensGRCh37"
}

trace.fields = 'process,task_id,hash,name,native_id,attempt,status,exit,realtime,cpus,memory,%cpu,vmem,rss,submit,start,complete,duration,realtime,rchar,wchar'

// Parameters for SLURM
executor {
    name = 'slurm'
    jobName = { "$task.hash" }
    queueSize = params.nQueue
}

process {

    // General process (task) parameters
    queue = params.submission_queue
    clusterOptions = { "--mail-user=$params.userEmail --mail-type=FAIL" + ' ' +"--nodelist=$params.nodelist" }
    cpus = { check_resources( 1 * task.attempt, params.max_cpus) }
    memory = { check_resources( 12.Gb * task.attempt, params.max_memory) }
    time = { check_resources(24.h * task.attempt, params.max_time) }

    // Error strategy for failing tasks
    errorStrategy = { task.exitStatus in 137..143 ? 'retry' : 'terminate' }
    maxRetries = 6  // Number of times a task fails
    maxErrors = '-1' // Turn off maxErrors

    withName:runFastQC {
        cpus = 4
        time = { 1.h * task.attempt }
        memory = { 12.GB * task.attempt }
        stageInMode = 'copy'
    }

    withName:runSTAR {
        conda = '/data/bioinformatics/all_genomics_analysis/conda_environments/STAR'
        cpus = 8
        time = { 12.h * task.attempt }
        memory = { 50.GB * task.attempt }
        stageInMode = 'copy'
    }

    withName:runFeatureCounts {
        cpus = 8
    }

    withName:runUmiToolsDedup {
        conda = '/data/bioinformatics/all_genomics_analysis/conda_environments/UMITOOLS_env'
        memory = { 50.GB * task.attempt }
        time = { 8.h * task.attempt }
    }

    withName:runGATK {
        conda = '/data/bioinformatics/all_genomics_analysis/conda_environments/gatk'
        cpus = 8
        time = { 24.h * task.attempt }
        memory = { 20.GB * task.attempt }
    }

    withName:runMarkDuplicates {
        memory = { 50.GB * task.attempt}
        time = { 8.h * task.attempt }
    }

    withName:runSplitNCigarReads {
        memory = { 30.GB * task.attempt }
    }

    withLabel:qcEnv {
        conda = '/data/bioinformatics/all_genomics_analysis/conda_environments/qualityControl'
    }
    
    withLabel:gatkEnv {
        conda = '/data/bioinformatics/all_genomics_analysis/conda_environments/gatk'
    }

    withLabel:rEnv {
        conda = '/data/bioinformatics/all_genomics_analysis/conda_environments/R-env'
    }
}